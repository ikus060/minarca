--- a/src/rdiff_backup/connection.py
+++ b/src/rdiff_backup/connection.py
@@ -31,6 +31,7 @@ import tempfile  # noqa: F401
 import types  # noqa: F401
 import time
 import subprocess
+import errno
 
 # The following EA and ACL modules may be used if available
 try:  # compat200
@@ -430,7 +431,12 @@ class PipeConnection(LowLevelPipeConnection):
             self._put(arg, req_num)
         result = self._get_response(req_num)
         self.unused_request_numbers.add(req_num)
-        if isinstance(result, Exception):
+        if isinstance(result, OSError) and getattr(result, "errno_str", False):
+            # OSError code are specific to each platform.
+            # Let convert the errno to current platform.
+            result.errno = getattr(errno, result.errno_str, -result.errno)
+            raise result
+        elif isinstance(result, Exception):
             raise result
         elif isinstance(result, SystemExit):
             raise result
@@ -522,7 +528,11 @@ class PipeConnection(LowLevelPipeConnection):
                         ex=sys.exc_info()[1], ty=sys.exc_info()[0],
                         tb="".join(traceback.format_tb(sys.exc_info()[2]))),
                     log.INFO)
-        return sys.exc_info()[1]
+        result = sys.exc_info()[1]
+        # OSError code are specificto the platform. Send back code as string.
+        if isinstance(result, OSError) and result.errno:
+            result.errno_str = errno.errorcode.get(result.errno, "EUNKWN")
+        return result
 
     def _get_new_req_num(self):
         """Allot a new request number and return it"""