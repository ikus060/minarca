#!/bin/sh
# Copyright (C) 2020, IKUS Software inc. All rights reserved.
# IKUS Software inc. PROPRIETARY/CONFIDENTIAL.
# Use is subject to license terms.

MAIN=com.patrikdufresne.minarca.core.Main

# resolve links - $0 may be a softlink
PRG="$0"

while [ -h "$PRG" ]; do
  ls=`ls -ld "$PRG"`
  link=`expr "$ls" : '.*-> \(.*\)$'`
  if expr "$link" : '/.*' > /dev/null; then
    PRG="$link"
  else
    PRG=`dirname "$PRG"`/"$link"
  fi
done

PRGDIR=`dirname "$PRG"`
BASEDIR=`cd "$PRGDIR/.." >/dev/null; pwd`

# Reset the REPO variable. If you need to influence this use the environment setup file.
REPO=

# Detect Linux
ISLINUX=0
if [ "$(uname)" != "Linux" ]; then
  ISLINUX=1
fi

# OS specific support.  $var _must_ be set to either true or false.
linux=false;
darwin=false;
case "`uname`" in
  Linux*) linux=true ;;
  Darwin*) darwin=true
           if [ -z "$JAVA_VERSION" ] ; then
             JAVA_VERSION="CurrentJDK"
           else
             echo "Using Java version: $JAVA_VERSION"
           fi
           if [ -z "$JAVA_HOME" ]; then
              if [ -x "/usr/libexec/java_home" ]; then
                  JAVA_HOME=`/usr/libexec/java_home`
              else
                  JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/${JAVA_VERSION}/Home
              fi
           fi       
           ;;
  *)
    echo "Error: OS not supported." 1>&2
    exit 1
    ;;
esac

IS32=false;
IS64=false;
case "`uname -m`" in
  x86_64*) IS64=true ;;
  x86) IS32=true ;;
  *)
    echo "Error: OS bitness not supported." 1>&2
    exit 1
    ;;
esac

if [ -z "$JAVA_HOME" ] ; then
  if [ -r /etc/gentoo-release ] ; then
    JAVA_HOME=`java-config --jre-home`
  fi
fi

# If a specific java binary isn't specified search for the standard 'java' binary
if [ -z "$JAVACMD" ] ; then
  if [ -n "$JAVA_HOME"  ] ; then
    if [ -x "$JAVA_HOME/jre/sh/java" ] ; then
      # IBM's JDK on AIX uses strange locations for the executables
      JAVACMD="$JAVA_HOME/jre/sh/java"
    else
      JAVACMD="$JAVA_HOME/bin/java"
    fi
  else
    JAVACMD=`which java`
  fi
fi

if [ ! -x "$JAVACMD" ] ; then
  echo "Error: JAVA_HOME is not defined correctly." 1>&2
  echo "  We cannot execute $JAVACMD" 1>&2
  exit 1
fi

if [ -z "$REPO" ]
then
  REPO="$BASEDIR"/lib
fi

CLASSPATH="$BASEDIR"/etc:"$REPO"/*

# Add SWT
if $linux; then
  if $IS32; then
    CLASSPATH=$CLASSPATH:$REPO/linux/x86/*
  elif $IS64; then
    CLASSPATH=$CLASSPATH:$REPO/linux/x86_64/*
  fi
fi

if [ -n "$CLASSPATH_PREFIX" ] ; then
  CLASSPATH=$CLASSPATH_PREFIX:$CLASSPATH
fi

# Change working directory
cd "$BASEDIR"

# Default to user home directory
LOG_FOLDER=${XDG_DATA_HOME:-$HOME/.local/share}/minarca/
UID=$(id -u)
if [ "$UID" = "0" ]; then
    LOG_FOLDER=/var/log/
fi

# Execute java command line
exec "$JAVACMD" $JAVA_OPTS  \
  -classpath "$CLASSPATH" \
  -Dlog.folder=$LOG_FOLDER \
  $MAIN \
  "$@"