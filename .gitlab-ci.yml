image: $DOCKER_REGISTRY/pdsl/${CI_PROJECT_NAME}:dind-$CI_PIPELINE_IID
variables: 
  PIP_EXTRA_INDEX_URL: https://nexus.patrikdufresne.com/repository/pypi/simple
  MAVEN_OPTS: "-Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=WARN
               -Dorg.slf4j.simpleLogger.showDateTime=true
               -Djava.awt.headless=true
               -Dmaven.repo.local=.m2/repository"

stages:
- prebuild
- test-build
- test-package
- publish
- deploy
- test-integration

prebuild:
  stage: prebuild
  image: docker
  script:
  - export TAG=$DOCKER_REGISTRY/pdsl/${CI_PROJECT_NAME}:dind-$CI_PIPELINE_IID
  - docker build -t $TAG tools/dind
  - docker login $DOCKER_REGISTRY -u $DOCKER_USR -p $DOCKER_PWD
  - docker push $TAG

.test-build: &test-build
  stage: test-build
  script:
  - make $TARGET

# TODO Split this by python version and OS.
test-server_py27: 
  <<: *test-build
  variables:
    PYTHON: python2
    DIST: buster
    TARGET: test-server

test-server_py3: 
  <<: *test-build
  variables:
    PYTHON: python3
    DIST: buster
    TARGET: test-server
  
test-quota-api_py27: 
  <<: *test-build
  variables:
    PYTHON: python2
    DIST: buster
    TARGET: test-quota-api
    
test-quota-api_py3: 
  <<: *test-build
  variables:
    PYTHON: python3
    DIST: buster
    TARGET: test-quota-api

test-client_linux:
  <<: *test-build
  variables:
    PYTHON: python3
    DIST: stretch
    TARGET: test-client

test-client_windows:
  <<: *test-build
  variables:
    DIST: windows
    TARGET: build-client

build-client:
  <<: *test-build
  variables:
    DIST: stretch
    TARGET: build-client
  artifacts:
    paths:
    - ./*.exe
    - ./*.deb

build_server_deb_stretch:
  <<: *test-build
  variables:
    DIST: stretch
    TARGET: build-server-deb
  artifacts:
    paths:
    - minarca-server_*.deb

build_server_deb_stretch:
  <<: *test-build
  variables:
    DIST: buster
    TARGET: build-server-deb
  artifacts:
    paths:
    - minarca-server_*.deb

server_test_deb_stretch:
  stage: test-package
  image: debian:stretch
  script: 
  - bash ./tests/install-server-deb.sh ./minarca-server_*_stretch.deb
  
server_test_deb_buster:
  stage: test-package
  image: debian:buster
  script: 
  - bash ./tests/install-server-deb.sh ./minarca-server_*_buster.deb

client_test_deb_stretch:
  stage: test-package
  image: debian:stretch
  before_script: []
  script:
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client/minarca-installation-package-deb/target/*.deb)
  - bash ./tests/install-client-deb.sh

client_test_deb_buster:
  stage: test-package
  image: debian:buster
  before_script: []
  script:
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client/minarca-installation-package-deb/target/*.deb)
  - bash ./tests/install-client-deb.sh

client_test_exe:
  stage: test-package
  image: debian:stretch
  before_script: []
  script:
  - export MINARCA_EXE_FILE=$(ls -1 ./minarca-client/minarca-installation-package/target/*.exe)
  - bash ./tests/install-client-win.sh

server_publish:
  stage: publish
  except:
  - tags
  script:
  # Publish to kalo
  - eval $(ssh-agent -s)
  - echo "$KALO_WWWDATA_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - scp -o StrictHostKeyChecking=no ./minarca-server_*.deb www-data@kalo.patrikdufresne.com:/var/www/patrikdufresne/archive/minarca/nightly/

server_promote:
  stage: publish
  only:
  - tags
  script:
  # Setup authentication
  - eval $(ssh-agent -s)
  - echo "$KALO_WWWDATA_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Publish to kalo
  - export MINARCA_DEB_STRETCH=$(ls -1 minarca-server_*_stretch.deb)
  - scp -o StrictHostKeyChecking=no ./$MINARCA_DEB_STRETCH www-data@kalo.patrikdufresne.com:/var/www/patrikdufresne/archive/minarca/
  - ssh -o StrictHostKeyChecking=no www-data@kalo.patrikdufresne.com ln -fs /var/www/patrikdufresne/archive/minarca/$MINARCA_DEB_STRETCH /var/www/patrikdufresne/archive/minarca/minarca-server_stretch_amd64.deb
  - export MINARCA_DEB_BUSTER=$(ls -1 minarca-server_*_buster.deb)
  - scp -o StrictHostKeyChecking=no ./$MINARCA_DEB_BUSTER www-data@kalo.patrikdufresne.com:/var/www/patrikdufresne/archive/minarca/
  - ssh -o StrictHostKeyChecking=no www-data@kalo.patrikdufresne.com ln -fs /var/www/patrikdufresne/archive/minarca/$MINARCA_DEB_BUSTER /var/www/patrikdufresne/archive/minarca/minarca-server_buster_amd64.deb

client_publish:
  stage: publish
  environment:
    name: dev
    url: http://www.patrikdufresne.com/archive/minarca/nightly/minarca-client-${REVISION}.exe
  script:
  # Setup authentication
  - eval $(ssh-agent -s)
  - echo "$KALO_WWWDATA_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Publish to kalo
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client/minarca-installation-package-deb/target/*.deb)
  - export MINARCA_EXE_FILE=$(ls -1 ./minarca-client/minarca-installation-package/target/*.exe)
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.patrikdufresne.com:/var/www/patrikdufresne/archive/minarca/nightly/
  - scp -o StrictHostKeyChecking=no $MINARCA_EXE_FILE www-data@kalo.patrikdufresne.com:/var/www/patrikdufresne/archive/minarca/nightly/

client_promote:
  stage: publish
  only:
  - tags
  environment:
    name: latest
    url: http://www.patrikdufresne.com/archive/minarca/minarca-latest-install.exe
  script:
  # Setup authentication
  - eval $(ssh-agent -s)
  - echo "$KALO_WWWDATA_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  # Publish to kalo
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client/minarca-installation-package-deb/target/*.deb)
  - export MINARCA_EXE_FILE=$(ls -1 ./minarca-client/minarca-installation-package/target/*.exe)
  - scp -o StrictHostKeyChecking=no $MINARCA_EXE_FILE www-data@kalo.patrikdufresne.com:/var/www/patrikdufresne/archive/minarca/
  - scp -o StrictHostKeyChecking=no $MINARCA_DEB_FILE www-data@kalo.patrikdufresne.com:/var/www/patrikdufresne/archive/minarca/
  - ssh -o StrictHostKeyChecking=no www-data@kalo.patrikdufresne.com ln -fs $(basename $MINARCA_EXE_FILE) /var/www/patrikdufresne/archive/minarca/minarca-latest-install.exe
  - ssh -o StrictHostKeyChecking=no www-data@kalo.patrikdufresne.com ln -fs $(basename $MINARCA_DEB_FILE) /var/www/patrikdufresne/archive/minarca/minarca-client_latest_all.deb

deploy_staging_sestican:
  stage: deploy
  image: ikus060/ansible
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "False"
  environment:
    name: staging
    url: https://test.minarca.net
  before_script:
  - eval $(ssh-agent -s)
  - echo "$GITLAB_SSH_IDENTITY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  script:
  # Delete previous installation
  - ssh -o StrictHostKeyChecking=no root@sestican.patrikdufresne.com "! dpkg -s minarca-server || apt remove -y minarca-server --purge"
  - ssh -o StrictHostKeyChecking=no root@sestican.patrikdufresne.com "rm -Rf /etc/minarca/; rm -Rf /backups/"
  # Install minarca
  - export MINARCA_VERSION=$(cd minarca-server; python ./setup.py --version)
  - echo MINARCA_VERSION=$MINARCA_VERSION
  - git clone "http://${GITLAB_USR}:${GITLAB_PWD}@git.patrikdufresne.com/pdsl/ansible-config.git"
  - cd ansible-config
  - ansible-playbook minarca.yml -i pdsl --extra-vars "ansible_user=root minarca_server_version=$MINARCA_VERSION" --limit sestican
  
deploy_prod_ranculos:
  stage: deploy
  image: ikus060/ansible
  when: manual
  only: 
  - tags
  - master
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "False"
  environment:
    name: prod
    url: https://www.minarca.net
  before_script:
  - eval $(ssh-agent -s)
  - echo "$RANCULOS_ROOT_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - echo "$MERCOR_ROOT_PRIVATEKEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  script:
  - export MINARCA_VERSION=$(cd minarca-server; python ./setup.py --version)
  - echo MINARCA_VERSION=$MINARCA_VERSION
  - git clone "http://${GITLAB_USR}:${GITLAB_PWD}@git.patrikdufresne.com/pdsl/ansible-config.git"
  - cd ansible-config
  - ansible-playbook minarca.yml -i pdsl --extra-vars "ansible_user=root minarca_server_version=$MINARCA_VERSION" --limit ranculos,mercor
  
test_link_debian_stretch:
  image: debian:stretch
  stage: test-integration
  variables:
    MINARCA_REPOSITORYNAME: test-${CI_JOB_ID}
  script: 
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client/minarca-installation-package-deb/target/*.deb)
  - bash ./tests/install-client-deb.sh
  - bash ./tests/link-link-deb-linux.sh
  
test_link_debian_buster:
  image: debian:buster
  stage: test-integration
  variables:
    MINARCA_REPOSITORYNAME: test-${CI_JOB_ID}
  script: 
  - export MINARCA_DEB_FILE=$(ls -1 ./minarca-client/minarca-installation-package-deb/target/*.deb)
  - bash ./tests/install-client-deb.sh
  - bash ./tests/link-link-deb-linux.sh

# This test is not working and fail because of issue with wine.
#test_link_win:
#  image: debian:buster
#  stage: test-integration
#  variables:
#    MINARCA_REPOSITORYNAME: test-${CI_JOB_ID}
#  allow_failure: true
#  script: 
#  - export MINARCA_EXE_FILE=$(ls -1 ./minarca-client/minarca-installation-package/target/*.exe)
#  - bash ./tests/install-client-win.sh
#  - bash ./tests/link-link-win.sh
  